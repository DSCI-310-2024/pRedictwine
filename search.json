[{"path":[]},{"path":"https://dsci-310-2024.github.io/pRedictwine/CODE_OF_CONDUCT.html","id":"statement-on-diversity-equity-and-inclusion","dir":"","previous_headings":"","what":"Statement on Diversity, Equity, and Inclusion","title":"pRedictwine Code of Conduct","text":"UBC students hail diverse range backgrounds experiences. promote safe inclusive working environment, pledge making project harassment-free regardless age, race, gender, religion. People represent project, either officially unofficially, must follow code conduct.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CODE_OF_CONDUCT.html","id":"expected-behaviour","dir":"","previous_headings":"","what":"Expected Behaviour","title":"pRedictwine Code of Conduct","text":"Examples Acceptable Behaviour * Using welcoming inclusive language * respectful differing perspectives experiences * open collaborative * Accepting constructive criticism tactfully * Ask help unsure Examples Unacceptable Behaviour * Insulting, derogatory, hateful language * Harassment * Trolling * Publishing sensitive information without explicit permission * Deliberate intimidation, stalking, following * Violent threats language directed another person * Incitement violence harassment towards individual * Sexual language imagery * conduct inappropriate professional audience Participants issued warning expected comply immediately.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CODE_OF_CONDUCT.html","id":"consequences","dir":"","previous_headings":"","what":"Consequences","title":"pRedictwine Code of Conduct","text":"participant breaches code conduct, meeting arranged discuss problem participant. investigating, warnings issued offender necessary, serious transgressions may lead expulsion community.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"pRedictwine Code of Conduct","text":"Incidents may reported directly DSCI 310 teaching team tiffany.timbers@stat.ubc.ca.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"pRedictwine Code of Conduct","text":"Code Conduct inspired tidyverse Code Conduct, adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"pRedictwine Contributing Guideline","title":"pRedictwine Contributing Guideline","text":"guide describes propose change project. welcome input, ideas, feedback project. Whether bug fix, new function, new feature. Please aware contributions accepted Project’s licence.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CONTRIBUTING.html","id":"changes","dir":"","previous_headings":"","what":"Changes","title":"pRedictwine Contributing Guideline","text":"project follow “GitHub Flow” workflow. Detailed contributing guidelines can found DSCI 310 textbook. summarized guideline : * Create issue contributors may review agree needed- * Set repository: clone repository git clone git@github.com:DSCI-310-2024/pRedictwine.git navigate root repository cd. * Create unique branch git switch -c <-branch>. * contribution added, commit push changes branch : Please submit pull request GitHub contributors may review changes merging branch back main.","code":"git add <modified-file> git commit -m \"Some descriptive message about your change\" git push origin <your-branch>"},{"path":"https://dsci-310-2024.github.io/pRedictwine/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"pRedictwine Contributing Guideline","text":"Please note project follows Code Conduct. must abide terms contribute project.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"pRedictwine Contributing Guideline","text":"contributing guide inspired dplyr contributing guide, available .","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pRedictwine authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/articles/pRedictwine-vignette.html","id":"load_w_new_col","dir":"Articles","previous_headings":"","what":"1. load_w_new_col()","title":"pRedictwine-vignette","text":"Loading dataset URL changing column names: want load online dataset URL time change names columns, usually first load data subsequently change column names. However, pRedictwine, can single function load_W_new_col(). function takes 3 parameters: dataset_path: URL dataset interest string. col_names: vector strings column names. delimiter: dataset’s delimiter string. show example use function URL leads mtcars dataset. information mtcars available ?mtcars. Note output tibble, https://tibble.tidyverse.org/ describes , “modern reimagining data frame”.","code":"dataset_url <- \"https://raw.githubusercontent.com/plotly/datasets/master/mtcars.csv\"  new_col_names <- c(\"model\", \"milespergallon\", \"cylinder_number\", \"displacement\", \"horsepower\", \"rear_axle_ratio\", \"weight\", \"quartermiletime\", \"engine\", \"transmission\", \"forwardgears\", \"carb\")  comma_delimiter <- \",\"  loaded_dataset <- load_w_new_col(dataset_url, new_col_names, comma_delimiter) #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (1): manufacturer #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  # head() loads the first 6 rows of the tibble head(loaded_dataset) #> # A tibble: 6 × 12 #>   model   milespergallon cylinder_number displacement horsepower rear_axle_ratio #>   <chr>            <dbl>           <dbl>        <dbl>      <dbl>           <dbl> #> 1 Mazda …           21                 6          160        110            3.9  #> 2 Mazda …           21                 6          160        110            3.9  #> 3 Datsun…           22.8               4          108         93            3.85 #> 4 Hornet…           21.4               6          258        110            3.08 #> 5 Hornet…           18.7               8          360        175            3.15 #> 6 Valiant           18.1               6          225        105            2.76 #> # ℹ 6 more variables: weight <dbl>, quartermiletime <dbl>, engine <dbl>, #> #   transmission <dbl>, forwardgears <dbl>, carb <dbl>"},{"path":"https://dsci-310-2024.github.io/pRedictwine/articles/pRedictwine-vignette.html","id":"create_histogram","dir":"Articles","previous_headings":"","what":"2. create_histogram()","title":"pRedictwine-vignette","text":"want create histogram x labels, different coloured values group, specifiable x-axis, y-axis, labels; can create_histogram(). Usually, ggplot2, multiple layers specified create_histogram(), possible single function. function takes 6 parameters: df: dataframe/tibble interest. x: column serve x axis. group: column colored . x_lab: string x axis label, required. Default label. y_lab: string y axis label, required. Default label. font_size: size font used histogram, needed modified. Default 10.5. show example mtcars dataset. load histogram “mpg” values, colored “” group. specified x label “Miles/(US) gallon”, y label “Count”, font size 10.","code":"mpghistogram <- create_histogram(df = mtcars_mutated, x = mpg, group = am,                   x_lab = \"Miles/(US) gallon\", y_lab = \"Count\", font_size = 10)  mpghistogram #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://dsci-310-2024.github.io/pRedictwine/articles/pRedictwine-vignette.html","id":"fit_linear_reg","dir":"Articles","previous_headings":"","what":"3. fit_linear_reg()","title":"pRedictwine-vignette","text":"creating fitted linear models, quite functions used correct order. confusing. want create fitted linear regression model single step, can fit_linear_reg(). function takes 2 parameters: formula: regression formula. data_frame: data frame/tibble interest. show example fit linear regression model predict mpg mtcars dataset, using variables mtcars. ’s !","code":"mpg_fit <- fit_linear_reg(mpg ~ ., mtcars)   mpg_fit #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          cyl         disp           hp         drat           wt   #>    12.30337     -0.11144      0.01334     -0.02148      0.78711     -3.71530   #>        qsec           vs           am         gear         carb   #>     0.82104      0.31776      2.52023      0.65541     -0.19942"},{"path":"https://dsci-310-2024.github.io/pRedictwine/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rui Xiang Yu. Author, maintainer. Rico Chan. Author. Kevin Yu. Author.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiang Yu R, Chan R, Yu K (2024). pRedictwine: Aids workflow linear regression analysis. R package version 0.0.1, https://dsci-310-2024.github.io/pRedictwine/.","code":"@Manual{,   title = {pRedictwine: Aids in the workflow of a linear regression analysis},   author = {Rui {Xiang Yu} and Rico Chan and Kevin Yu},   year = {2024},   note = {R package version 0.0.1},   url = {https://dsci-310-2024.github.io/pRedictwine/}, }"},{"path":"https://dsci-310-2024.github.io/pRedictwine/index.html","id":"predictwine","dir":"","previous_headings":"","what":"Aids in the workflow of a linear regression analysis","title":"Aids in the workflow of a linear regression analysis","text":"goal pRedictwine aid workflow linear regression analysis. provides functions aid steps loading tidying data, histograms exploratory analysis, creating linear regression model. Contains 3 functions aimed help workflow linear regression analysis. functions one load online dataset change columns’ names, another create appropriate histograms, last one directly create linear regression model. package created mainly prediction wine quality MLR, found https://github.com/DSCI-310-2024/dsci-310_group-7_wine-quality-prediction. package meant used programming language R. version R used create project 4.3.2. pRedictwine sits package ecosystem R bundle along packages aid loading wrangling data (readr tidyverse), creating histograms (ggplot2), creating fitted linear regression model (parsnip recipes). However, package differs aforementioned ones functions allow user reach desired end product without use multiple functions. Instead, specifying single function trick (details Usage).","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Aids in the workflow of a linear regression analysis","text":"can install development version pRedictwine GitHub :","code":"# install.packages(\"pRedictwine\") devtools::install_github(\"DSCI-310-2024/pRedictwine\")"},{"path":"https://dsci-310-2024.github.io/pRedictwine/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Aids in the workflow of a linear regression analysis","text":"Loading dataset URL changing column names: want load online dataset URL time change names columns, usually first load data subsequently change column names. However, pRedictwine, can single function load_W_new_col(). Create histogram: want create histogram x labels, different coloured values group, specifiable x-axis, y-axis, labels; can create_histogram(). Usually, ggplot2, multiple layers specified create_histogram(), possible single function.  Create model: creating fitted linear models, quite functions used correct order. confusing. want create fitted linear regression model single step, can fit_linear_reg().","code":"library(pRedictwine)  dataset_url <- \"https://raw.githubusercontent.com/plotly/datasets/master/mtcars.csv\"  new_col_names <- c(\"model\", \"milespergallon\", \"cylinder_number\", \"displacement\", \"horsepower\", \"rear_axle_ratio\", \"weight\", \"quartermiletime\", \"engine\", \"transmission\", \"forwardgears\", \"carb\")  comma_delimiter <- \",\"  loaded_dataset <- load_w_new_col(dataset_url, new_col_names, comma_delimiter) #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (1): manufacturer #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  head(loaded_dataset) #> # A tibble: 6 × 12 #>   model   milespergallon cylinder_number displacement horsepower rear_axle_ratio #>   <chr>            <dbl>           <dbl>        <dbl>      <dbl>           <dbl> #> 1 Mazda …           21                 6          160        110            3.9  #> 2 Mazda …           21                 6          160        110            3.9  #> 3 Datsun…           22.8               4          108         93            3.85 #> 4 Hornet…           21.4               6          258        110            3.08 #> 5 Hornet…           18.7               8          360        175            3.15 #> 6 Valiant           18.1               6          225        105            2.76 #> # ℹ 6 more variables: weight <dbl>, quartermiletime <dbl>, engine <dbl>, #> #   transmission <dbl>, forwardgears <dbl>, carb <dbl> library(pRedictwine)  mpghistogram <- create_histogram(df = mtcars_mutated, x = mpg, group = am,                   x_lab = \"Miles/(US) gallon\", y_lab = \"Count\", font_size = 10.5)  mpghistogram #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. library(pRedictwine)  mpg_fit <- fit_linear_reg(mpg ~ ., mtcars)   mpg_fit #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          cyl         disp           hp         drat           wt   #>    12.30337     -0.11144      0.01334     -0.02148      0.78711     -3.71530   #>        qsec           vs           am         gear         carb   #>     0.82104      0.31776      2.52023      0.65541     -0.19942"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/create_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"create_histogram — create_histogram","title":"create_histogram — create_histogram","text":"Creates ggplot histograms x labels, different coloured qualities, specifiable x-axis, y-axis, labels bundled workflow. applied workflow input training data, workflow used alongside cowplot commands create visualization.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/create_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_histogram — create_histogram","text":"","code":"create_histogram(df, x, group, x_lab = \"\", y_lab = \"\", font_size = 10.5)"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/create_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_histogram — create_histogram","text":"df training data frame data frame extension (e.g. tibble). x column within data_frame serve x axis. group column within data_frame histogram coloured . x_lab string label x-axis required. Default \"\" (axis label). y_lab string label y-axis required. Default \"\" (axis label). font_size Size font used histogram. Default 10.5.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/create_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_histogram — create_histogram","text":"histogram created ggplot. histogram different colours based quality wine. x-label always show, y-axis shown add_y_lab = TRUE. Returned histogram work well cowplot histograms joined one visualization.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/create_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_histogram — create_histogram","text":"","code":"create_histogram(df = mtcars, x = mpg, group = am,                  x_lab = \"Miles/(US) gallon\", y_lab = \"Count\", font_size = 10.5) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: The following aesthetics were dropped during statistical transformation: colour #> and fill. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor?"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/fit_linear_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Linear Regression Model — fit_linear_reg","title":"Fit Linear Regression Model — fit_linear_reg","text":"Specifies linear regression model, creates recipe, bundles workflow. Applies workflow training data return fitted model.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/fit_linear_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Linear Regression Model — fit_linear_reg","text":"","code":"fit_linear_reg(formula, data_frame)"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/fit_linear_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Linear Regression Model — fit_linear_reg","text":"formula R regression formula. data_frame training data frame data frame extension (e.g. tibble).","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/fit_linear_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Linear Regression Model — fit_linear_reg","text":"fitted linear regression model object. Returned object contains finalized recipe fitted model objects (e.g., coefficients) inside.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/fit_linear_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Linear Regression Model — fit_linear_reg","text":"","code":"fit_linear_reg(mpg ~ ., mtcars) #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          cyl         disp           hp         drat           wt   #>    12.30337     -0.11144      0.01334     -0.02148      0.78711     -3.71530   #>        qsec           vs           am         gear         carb   #>     0.82104      0.31776      2.52023      0.65541     -0.19942   #>"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/load_w_new_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataset with new column names — load_w_new_col","title":"Load dataset with new column names — load_w_new_col","text":"Given URL online dataset, datasets' delimiters, vector new column names, loads dataset tibble new column names.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/load_w_new_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataset with new column names — load_w_new_col","text":"","code":"load_w_new_col(dataset_path, col_names, delimiter)"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/load_w_new_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataset with new column names — load_w_new_col","text":"dataset_path URL path leads dataset. col_names Vector new column names strings (quoted). delimiter dataset's delimiter (\".\", \";\", \",\", etc), quoted.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/load_w_new_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataset with new column names — load_w_new_col","text":"Loaded dataset new column names, tibble.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/load_w_new_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load dataset with new column names — load_w_new_col","text":"","code":"load_w_new_col(\"https://raw.githubusercontent.com/plotly/datasets/master/mtcars.csv\", c(\"model\", \"milespergallon\", \"cylinder_number\", \"displacement\", \"horsepower\", \"rear_axle_ratio\", \"weight\", \"quartermiletime\", \"engine\", \"transmission\", \"forwardgears\", \"carb\"), \",\") #> Rows: 32 Columns: 12 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (1): manufacturer #> dbl (11): mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 32 × 12 #>    model  milespergallon cylinder_number displacement horsepower rear_axle_ratio #>    <chr>           <dbl>           <dbl>        <dbl>      <dbl>           <dbl> #>  1 Mazda…           21                 6         160         110            3.9  #>  2 Mazda…           21                 6         160         110            3.9  #>  3 Datsu…           22.8               4         108          93            3.85 #>  4 Horne…           21.4               6         258         110            3.08 #>  5 Horne…           18.7               8         360         175            3.15 #>  6 Valia…           18.1               6         225         105            2.76 #>  7 Duste…           14.3               8         360         245            3.21 #>  8 Merc …           24.4               4         147.         62            3.69 #>  9 Merc …           22.8               4         141.         95            3.92 #> 10 Merc …           19.2               6         168.        123            3.92 #> # ℹ 22 more rows #> # ℹ 6 more variables: weight <dbl>, quartermiletime <dbl>, engine <dbl>, #> #   transmission <dbl>, forwardgears <dbl>, carb <dbl>"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dsci-310-2024.github.io/pRedictwine/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
